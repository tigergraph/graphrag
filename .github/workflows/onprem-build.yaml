name: GraphRAG Build On-Prem

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  SHA: ${{ github.sha }}

jobs:
  build-image:
    runs-on: ubuntu-latest
    outputs:
      image: ${{steps.get-image.outputs.IMAGE}}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.PUBLIC_DOCKERHUB_USERNAME }}
        password: ${{ secrets.PUBLIC_DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Get Image tag
      id: get-image
      run: |
        IMAGE=${SHA::6}
        echo "IMAGE=$IMAGE" >> $GITHUB_ENV
        echo "IMAGE=$IMAGE" >> $GITHUB_OUTPUT
 
    - name: Build and push Docker image GraphRAG
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./graphrag/Dockerfile
        push: true
        tags: |
           tigergraph/graphrag:${{steps.get-image.outputs.IMAGE}}
           tigergraph/graphrag:latest
 
    - name: Build and push Docker image ECC
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./eventual-consistency-service/Dockerfile
        push: true
        tags: |
           tigergraph/graphrag-ecc:${{steps.get-image.outputs.IMAGE}}
           tigergraph/graphrag-ecc:latest

    - name: Build and push Docker image chat-history
      uses: docker/build-push-action@v5
      with:
        context: chat-history/
        file: ./chat-history/Dockerfile
        push: true
        tags: |
          tigergraph/chat-history:${{steps.get-image.outputs.IMAGE}}
          tigergraph/chat-history:latest
     
    - name: Build and push Docker image graphrag-ui
      uses: docker/build-push-action@v5
      with:
        context: graphrag-ui/
        file: ./graphrag-ui/Dockerfile
        push: true
        tags: |
          tigergraph/graphrag-ui:${{steps.get-image.outputs.IMAGE}}
          tigergraph/graphrag-ui:latest

#    - name: Set SSH key
#      run: |
#          mkdir -p ~/.ssh
#          echo "${{ secrets.PRIVATE_SSH_KEY }}" > ~/.ssh/id_rsa
#          chmod 600 ~/.ssh/id_rsa
#
#    - name: Update on-prem staging environment
#      run: |
#          ssh -o StrictHostKeyChecking=no ${{ secrets.DEV_USERNAME }}@${{ secrets.STAGE_ADDRESS }} << 'ENDSSH'
#          cd graphrag
#          docker compose pull
#          docker compose up -d
#          ENDSSH
