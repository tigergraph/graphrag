services:
  graphrag:
    image: tigergraph/graphrag:latest 
    platform: linux/amd64
    container_name: graphrag
    build:
      context: .
      dockerfile: graphrag/Dockerfile
    ports:
      - 8000:8000
    depends_on:
      - eventual-consistency-service
      - chat-history
      - tigergraph
    environment:
      LLM_CONFIG: "/code/configs/llm_config.json"
      DB_CONFIG: "/code/configs/db_config.json"
      LOGLEVEL: "INFO"
      USE_CYPHER: "true"
    volumes:
      - ./configs/:/code/configs

  eventual-consistency-service:
    image: tigergraph/graphrag-ecc:latest
    platform: linux/amd64
    container_name: graphrag-ecc
    build:
      context: .
      dockerfile: eventual-consistency-service/Dockerfile
    ports:
      - 8001:8001
    environment:
      LLM_CONFIG: "/code/configs/llm_config.json"
      DB_CONFIG: "/code/configs/db_config.json"
      LOGLEVEL: "INFO"
      INIT_EMBED_STORE: "false"
    volumes:
      - ./configs/:/code/configs

  chat-history:
    image: tigergraph/chat-history:latest
    platform: linux/amd64
    container_name: chat-history
    build:
      context: chat-history/
      dockerfile: Dockerfile
    ports:
      - 8002:8002
    environment:
      CONFIG_FILES: "/configs/chat_config.json,/configs/db_config.json"
      LOGLEVEL: "INFO"
    volumes:
      - ./configs/:/configs

  ui:
    image: tigergraph/graphrag-ui:latest 
    platform: linux/amd64
    container_name: ui 
    build:
      context: graphrag-ui
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - graphrag

  nginx:
    container_name: nginx
    image: nginx
    volumes:
      - ./configs/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - ui
      - graphrag

  tigergraph:
    container_name: tigergraph
    image: tigergraph/community:4.2.0
    ports:
      - "14240:14240"
