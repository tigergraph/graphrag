/*
 * Copyright (c) 2025 TigerGraph, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

CREATE OR REPLACE DISTRIBUTED QUERY Content_Similarity_Search(STRING json_list_vts="[]", STRING v_type="DocumentChunk", BOOL verbose = False) {
  TYPEDEF TUPLE<VERTEX v, STRING t> VertexTypes;
  SetAccum<VertexTypes> @@start_set_type;
  MapAccum<STRING, SetAccum<VertexTypes>> @@verbose_info;
  SetAccum<VERTEX> @@start_set;
  MapAccum<STRING, STRING> @@final_retrieval;

  STRING json_list = json_list_vts;
  IF instr(json_list_vts, "'v'") > 0 AND instr(json_list_vts, "'t'") > 0 THEN
      json_list = replace(json_list_vts, "'", "\"");
  END;

  JSONARRAY vts = parse_json_array(json_list);
  FOREACH i IN RANGE[0, vts.size()-1] DO
    JSONOBJECT vt = vts.getJsonObject(i);
    @@start_set += to_vertex(vt.getString("v"), vt.getString("t"));
  END;

  start = {@@start_set};

  res = SELECT s FROM start:s -(:e)- :tgt WHERE s.type == v_type
        ACCUM @@start_set_type += VertexTypes(s, s.type),
          IF (s.type == "DocumentChunk" OR s.type == "Document") AND tgt.type == "Content" THEN
            @@final_retrieval += (s.id -> tgt.text)
          END
        POST-ACCUM
          IF s.type == "Relationship" OR s.type == "Entity" OR s.type == "Concept" THEN
            @@final_retrieval += (s.id -> s.definition)
          ELSE IF s.type == "Community" THEN
            @@final_retrieval += (s.id -> s.description)
          END;
    
  @@verbose_info += ("start_set" -> @@start_set_type);

  PRINT @@final_retrieval as final_retrieval;    

  IF verbose THEN
      PRINT @@verbose_info as verbose;
  END;
}
